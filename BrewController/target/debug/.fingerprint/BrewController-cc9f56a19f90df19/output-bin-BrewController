{"message":"unused import: `std::process::Command`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":539,"byte_end":560,"line_start":19,"line_end":19,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::process::Command;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":478,"byte_end":561,"line_start":17,"line_end":19,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"#[allow(non_snake_case)]","highlight_start":1,"highlight_end":25},{"text":"//use std::sync::{Mutex, Once};","highlight_start":1,"highlight_end":32},{"text":"use std::process::Command;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::process::Command`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process::Command;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `std::thread`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":587,"byte_end":598,"line_start":21,"line_end":21,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::thread;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":583,"byte_end":599,"line_start":21,"line_end":21,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"use std::thread;","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::thread`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::thread;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `rand::Rng`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":604,"byte_end":613,"line_start":22,"line_end":22,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use rand::Rng;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":600,"byte_end":614,"line_start":22,"line_end":22,"column_start":1,"column_end":15,"is_primary":true,"text":[{"text":"use rand::Rng;","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `rand::Rng`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rand::Rng;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::time::Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":619,"byte_end":638,"line_start":23,"line_end":23,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::time::Duration;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":615,"byte_end":639,"line_start":23,"line_end":23,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use std::time::Duration;","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::time::Duration`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::Duration;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::time::SystemTime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":644,"byte_end":665,"line_start":24,"line_end":24,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use std::time::SystemTime;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":640,"byte_end":666,"line_start":24,"line_end":24,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use std::time::SystemTime;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::time::SystemTime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::SystemTime;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Arc`, `Mutex`, `Once`, `RwLock`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":683,"byte_end":686,"line_start":25,"line_end":25,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"use std::sync::{Arc, Mutex, Once, RwLock};","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":688,"byte_end":693,"line_start":25,"line_end":25,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"use std::sync::{Arc, Mutex, Once, RwLock};","highlight_start":22,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":695,"byte_end":699,"line_start":25,"line_end":25,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"use std::sync::{Arc, Mutex, Once, RwLock};","highlight_start":29,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":701,"byte_end":707,"line_start":25,"line_end":25,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"use std::sync::{Arc, Mutex, Once, RwLock};","highlight_start":35,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":667,"byte_end":709,"line_start":25,"line_end":25,"column_start":1,"column_end":43,"is_primary":true,"text":[{"text":"use std::sync::{Arc, Mutex, Once, RwLock};","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Arc`, `Mutex`, `Once`, `RwLock`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:25:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::{Arc, Mutex, Once, RwLock};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Local`, `Timelike`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":128,"byte_end":133,"line_start":6,"line_end":6,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"use chrono::{Local, Timelike};","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":135,"byte_end":143,"line_start":6,"line_end":6,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"use chrono::{Local, Timelike};","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":115,"byte_end":145,"line_start":6,"line_end":6,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"use chrono::{Local, Timelike};","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Local`, `Timelike`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse chrono::{Local, Timelike};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"the item `Duration` is imported redundantly","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":269,"byte_end":277,"line_start":13,"line_end":13,"column_start":17,"column_end":25,"is_primary":false,"text":[{"text":"use std::time::{Duration, SystemTime};","highlight_start":17,"highlight_end":25}],"label":"the item `Duration` is already imported here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":7006,"byte_end":7025,"line_start":220,"line_end":220,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"        use std::time::Duration;","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the item `Duration` is imported redundantly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:220:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::time::{Duration, SystemTime};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe item `Duration` is already imported here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        use std::time::Duration;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::time::Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":7006,"byte_end":7025,"line_start":220,"line_end":220,"column_start":13,"column_end":32,"is_primary":true,"text":[{"text":"        use std::time::Duration;","highlight_start":13,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":7002,"byte_end":7026,"line_start":220,"line_end":220,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        use std::time::Duration;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::time::Duration`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:220:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        use std::time::Duration;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `BrewDBLib::BrewDBClass`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":729,"byte_end":751,"line_start":27,"line_end":27,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use BrewDBLib::BrewDBClass;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":725,"byte_end":752,"line_start":27,"line_end":27,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use BrewDBLib::BrewDBClass;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BrewDBLib::BrewDBClass`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:27:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse BrewDBLib::BrewDBClass;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `SimpleKalmanFilterLib::SimpleKalmanFilter`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":785,"byte_end":826,"line_start":30,"line_end":30,"column_start":5,"column_end":46,"is_primary":true,"text":[{"text":"use SimpleKalmanFilterLib::SimpleKalmanFilter;","highlight_start":5,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":781,"byte_end":827,"line_start":30,"line_end":30,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"use SimpleKalmanFilterLib::SimpleKalmanFilter;","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `SimpleKalmanFilterLib::SimpleKalmanFilter`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse SimpleKalmanFilterLib::SimpleKalmanFilter;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":490,"byte_end":495,"line_start":16,"line_end":16,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"use std::sync::{Arc, Mutex, Once, RwLock};","highlight_start":22,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":488,"byte_end":495,"line_start":16,"line_end":16,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"use std::sync::{Arc, Mutex, Once, RwLock};","highlight_start":20,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:16:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::{Arc, Mutex, Once, RwLock};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Once`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/LoggerLib.rs","byte_start":23,"byte_end":27,"line_start":1,"line_end":1,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"use std::sync::{Mutex, Once};","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/LoggerLib.rs","byte_start":21,"byte_end":27,"line_start":1,"line_end":1,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"use std::sync::{Mutex, Once};","highlight_start":22,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Once`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/LoggerLib.rs:1:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::sync::{Mutex, Once};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `LoggerLib::Logger`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":909,"byte_end":926,"line_start":34,"line_end":34,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use LoggerLib::Logger;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":905,"byte_end":927,"line_start":34,"line_end":34,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use LoggerLib::Logger;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `LoggerLib::Logger`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:34:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse LoggerLib::Logger;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `result`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":3949,"byte_end":3955,"line_start":136,"line_end":136,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let result:rust_pigpio::GpioResult = rust_pigpio::write(self._boilerRelayPin, if state==true {  rust_pigpio::ON} else {rust_pigpio::OFF});","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":3949,"byte_end":3955,"line_start":136,"line_end":136,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let result:rust_pigpio::GpioResult = rust_pigpio::write(self._boilerRelayPin, if state==true {  rust_pigpio::ON} else {rust_pigpio::OFF});","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"_result","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `result`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:136:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let result:rust_pigpio::GpioResult = rust_pigpio::write(self._b\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_result`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `response`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":4889,"byte_end":4897,"line_start":159,"line_end":159,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let response: Result<u32, String>=rust_pigpio::initialize();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":4889,"byte_end":4897,"line_start":159,"line_end":159,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let response: Result<u32, String>=rust_pigpio::initialize();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"_response","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `response`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:159:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let response: Result<u32, String>=rust_pigpio::initialize();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_response`\u001b[0m\n\n"}
{"message":"variable `psmHandle` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5712,"byte_end":5721,"line_start":179,"line_end":179,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"        let mut psmHandle:GenericDrivers::PSMHandle=std::ptr::null_mut();","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_psmHandle` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `psmHandle` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:179:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut psmHandle:GenericDrivers::PSMHandle=std::ptr::null_mut();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_psmHandle` instead\u001b[0m\n\n"}
{"message":"unused variable: `result`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5782,"byte_end":5788,"line_start":180,"line_end":180,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let result= unsafe{","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5782,"byte_end":5788,"line_start":180,"line_end":180,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let result= unsafe{","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"_result","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `result`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:180:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let result= unsafe{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_result`\u001b[0m\n\n"}
{"message":"value assigned to `psmHandle` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5810,"byte_end":5819,"line_start":181,"line_end":181,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            psmHandle= GenericDrivers::PSM_Create(sense,control,range,mode,divider,intrupt);","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `psmHandle` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:181:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   psmHandle= GenericDrivers::PSM_Create(sense,control,range,mode,di\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"message":"struct `SensorState` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":305,"byte_end":316,"line_start":16,"line_end":16,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"pub struct SensorState {","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `SensorState` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:16:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SensorState {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"struct `SensorStateSnapshot` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":1141,"byte_end":1160,"line_start":46,"line_end":46,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"pub struct SensorStateSnapshot {","highlight_start":12,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `SensorStateSnapshot` is never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:46:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SensorStateSnapshot {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"method `set_datestamp` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":1519,"byte_end":1535,"line_start":61,"line_end":61,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"impl SensorState {","highlight_start":1,"highlight_end":17}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":1597,"byte_end":1610,"line_start":63,"line_end":63,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_datestamp(&mut self, datestamp: String) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_datestamp` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:63:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl SensorState {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Add a public method to set the datestamp\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_datestamp(&mut self, datestamp: String) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"method `set_datestamp` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":1688,"byte_end":1712,"line_start":68,"line_end":68,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"impl SensorStateSnapshot {","highlight_start":1,"highlight_end":25}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":1774,"byte_end":1787,"line_start":70,"line_end":70,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_datestamp(&mut self, datestamp: String) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_datestamp` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:70:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl SensorStateSnapshot {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    // Add a public method to set the datestamp\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_datestamp(&mut self, datestamp: String) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `random_float` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":1870,"byte_end":1882,"line_start":77,"line_end":77,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"fn random_float(min: f32, max: f32) -> f32 {","highlight_start":4,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `random_float` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:77:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn random_float(min: f32, max: f32) -> f32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `generate_fake_sensor_state` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":1984,"byte_end":2010,"line_start":82,"line_end":82,"column_start":4,"column_end":30,"is_primary":true,"text":[{"text":"fn generate_fake_sensor_state(iteration: u32) -> SensorState {","highlight_start":4,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `generate_fake_sensor_state` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:82:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn generate_fake_sensor_state(iteration: u32) -> SensorState {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `generate_fake_sensor_state_snapshot` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":4038,"byte_end":4073,"line_start":133,"line_end":133,"column_start":4,"column_end":39,"is_primary":true,"text":[{"text":"fn generate_fake_sensor_state_snapshot(iteration: u32) -> SensorStateSnapshot {","highlight_start":4,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `generate_fake_sensor_state_snapshot` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:133:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn generate_fake_sensor_state_snapshot(iteration: u32) -> SensorStateSn\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"multiple associated items are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewDBLib.rs","byte_start":5441,"byte_end":5457,"line_start":176,"line_end":176,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"impl BrewDBClass {","highlight_start":1,"highlight_end":17}],"label":"associated items in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":5633,"byte_end":5638,"line_start":181,"line_end":181,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"    pub fn clone(&self) -> Self {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":5737,"byte_end":5747,"line_start":186,"line_end":186,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn initialize(&self) -> Result<()> {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":7668,"byte_end":7692,"line_start":243,"line_end":243,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn insert_sensor_state_data(&self, data: &SensorState) -> Result<()> {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":9924,"byte_end":9957,"line_start":309,"line_end":309,"column_start":12,"column_end":45,"is_primary":true,"text":[{"text":"    pub fn insert_sensor_state_snapshot_data(&self, data: &SensorStateSnapshot) -> Result<()> {","highlight_start":12,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":11109,"byte_end":11150,"line_start":347,"line_end":347,"column_start":12,"column_end":53,"is_primary":true,"text":[{"text":"    pub fn retrieve_last_sensor_state_data_as_string(&self) -> Result<String> {","highlight_start":12,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":14928,"byte_end":14950,"line_start":417,"line_end":417,"column_start":8,"column_end":30,"is_primary":true,"text":[{"text":"    fn simulator_thread_logic(db: &BrewDBClass) {","highlight_start":8,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewDBLib.rs","byte_start":18137,"byte_end":18159,"line_start":487,"line_end":487,"column_start":12,"column_end":34,"is_primary":true,"text":[{"text":"    pub fn start_simulator_thread(&self) {","highlight_start":12,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: multiple associated items are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewDBLib.rs:181:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl BrewDBClass {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn clone(&self) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn initialize(&self) -> Result<()> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn insert_sensor_state_data(&self, data: &SensorState) -> Resul\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn insert_sensor_state_snapshot_data(&self, data: &SensorStateS\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn retrieve_last_sensor_state_data_as_string(&self) -> Result<S\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn simulator_thread_logic(db: &BrewDBClass) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn start_simulator_thread(&self) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"fields `err_measure`, `err_estimate`, `q`, `current_estimate`, `last_estimate`, and `kalman_gain` are never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":11,"byte_end":29,"line_start":1,"line_end":1,"column_start":12,"column_end":30,"is_primary":false,"text":[{"text":"pub struct SimpleKalmanFilter {","highlight_start":12,"highlight_end":30}],"label":"fields in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":36,"byte_end":47,"line_start":2,"line_end":2,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    err_measure: f32,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":58,"byte_end":70,"line_start":3,"line_end":3,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    err_estimate: f32,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":81,"byte_end":82,"line_start":4,"line_end":4,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    q: f32,","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":93,"byte_end":109,"line_start":5,"line_end":5,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    current_estimate: f32,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":120,"byte_end":133,"line_start":6,"line_end":6,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    last_estimate: f32,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":144,"byte_end":155,"line_start":7,"line_end":7,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    kalman_gain: f32,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: fields `err_measure`, `err_estimate`, `q`, `current_estimate`, `last_estimate`, and `kalman_gain` are never read\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/SimpleKalmanFilterLib.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct SimpleKalmanFilter {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfields in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    err_measure: f32,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    err_estimate: f32,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    q: f32,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    current_estimate: f32,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    last_estimate: f32,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    kalman_gain: f32,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"methods `update_estimate`, `set_measurement_error`, `set_estimate_error`, `set_process_noise`, `get_kalman_gain`, and `get_estimate_error` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":165,"byte_end":188,"line_start":10,"line_end":10,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"impl SimpleKalmanFilter {","highlight_start":1,"highlight_end":24}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":468,"byte_end":483,"line_start":22,"line_end":22,"column_start":12,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn update_estimate(&mut self, mea: f32) -> f32 {","highlight_start":12,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":962,"byte_end":983,"line_start":33,"line_end":33,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn set_measurement_error(&mut self, mea_e: f32) {","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":1061,"byte_end":1079,"line_start":37,"line_end":37,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn set_estimate_error(&mut self, est_e: f32) {","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":1158,"byte_end":1175,"line_start":41,"line_end":41,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn set_process_noise(&mut self, q: f32) {","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":1235,"byte_end":1250,"line_start":45,"line_end":45,"column_start":12,"column_end":27,"is_primary":true,"text":[{"text":"    pub fn get_kalman_gain(&self) -> f32 {","highlight_start":12,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/SimpleKalmanFilterLib.rs","byte_start":1310,"byte_end":1328,"line_start":49,"line_end":49,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn get_estimate_error(&self) -> f32 {","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `update_estimate`, `set_measurement_error`, `set_estimate_error`, `set_process_noise`, `get_kalman_gain`, and `get_estimate_error` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/SimpleKalmanFilterLib.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl SimpleKalmanFilter {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn update_estimate(&mut self, mea: f32) -> f32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_measurement_error(&mut self, mea_e: f32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_estimate_error(&mut self, est_e: f32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_process_noise(&mut self, q: f32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_kalman_gain(&self) -> f32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_estimate_error(&self) -> f32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"method `SetBoilerState` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":2860,"byte_end":2879,"line_start":98,"line_end":98,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"impl BrewController {","highlight_start":1,"highlight_end":20}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/BrewControllerLib.rs","byte_start":3842,"byte_end":3856,"line_start":134,"line_end":134,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn SetBoilerState(&mut self, state: bool) {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `SetBoilerState` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:134:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl BrewController {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SetBoilerState(&mut self, state: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_Set` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":447,"byte_end":454,"line_start":15,"line_end":15,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn PSM_Set(handle: PSMHandle, value: ::std::os::raw::c_uint);","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_Set` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:15:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_Set(handle: PSMHandle, value: ::std::os::raw::c_uint);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_GetCounter` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":532,"byte_end":546,"line_start":18,"line_end":18,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn PSM_GetCounter(handle: PSMHandle) -> ::std::os::raw::c_long;","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_GetCounter` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_GetCounter(handle: PSMHandle) -> ::std::os::raw::c_long;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_ResetCounter` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":619,"byte_end":635,"line_start":21,"line_end":21,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"    pub fn PSM_ResetCounter(handle: PSMHandle);","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_ResetCounter` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:21:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_ResetCounter(handle: PSMHandle);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_StopAfter` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":682,"byte_end":695,"line_start":24,"line_end":24,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn PSM_StopAfter(handle: PSMHandle, counter: ::std::os::raw::c_long);","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_StopAfter` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:24:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_StopAfter(handle: PSMHandle, counter: ::std::os::raw::c_l\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_CPS` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":775,"byte_end":782,"line_start":27,"line_end":27,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn PSM_CPS(handle: PSMHandle) -> ::std::os::raw::c_uint;","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_CPS` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:27:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_CPS(handle: PSMHandle) -> ::std::os::raw::c_uint;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_GetLastMillis` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":855,"byte_end":872,"line_start":30,"line_end":30,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"    pub fn PSM_GetLastMillis(handle: PSMHandle) -> ::std::os::raw::c_ulong;","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_GetLastMillis` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:30:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_GetLastMillis(handle: PSMHandle) -> ::std::os::raw::c_ulong;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_GetDivider` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":946,"byte_end":960,"line_start":33,"line_end":33,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn PSM_GetDivider(handle: PSMHandle) -> ::std::os::raw::c_uchar;","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_GetDivider` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:33:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_GetDivider(handle: PSMHandle) -> ::std::os::raw::c_uchar;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_SetDivider` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":1034,"byte_end":1048,"line_start":36,"line_end":36,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn PSM_SetDivider(handle: PSMHandle, divider: ::std::os::raw::c_uchar);","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_SetDivider` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:36:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_SetDivider(handle: PSMHandle, divider: ::std::os::raw::c_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_ShiftDividerCounter` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":1129,"byte_end":1152,"line_start":39,"line_end":39,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn PSM_ShiftDividerCounter(handle: PSMHandle, value: ::std::os::raw::c_char);","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_ShiftDividerCounter` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:39:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_ShiftDividerCounter(handle: PSMHandle, value: ::std::os::\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `PSM_Destroy` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/PSMWrapper.rs","byte_start":1230,"byte_end":1241,"line_start":42,"line_end":42,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn PSM_Destroy(handle: PSMHandle);","highlight_start":12,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `PSM_Destroy` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/PSMWrapper.rs:42:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn PSM_Destroy(handle: PSMHandle);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant `LOG_DEBUG` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/LoggerLib.rs","byte_start":100,"byte_end":109,"line_start":5,"line_end":5,"column_start":7,"column_end":16,"is_primary":true,"text":[{"text":"const LOG_DEBUG: u32 = 0b10;","highlight_start":7,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `LOG_DEBUG` is never used\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/LoggerLib.rs:5:7\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst LOG_DEBUG: u32 = 0b10;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"methods `set_log_mask` and `log_debug` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/LoggerLib.rs","byte_start":207,"byte_end":218,"line_start":12,"line_end":12,"column_start":1,"column_end":12,"is_primary":false,"text":[{"text":"impl Logger {","highlight_start":1,"highlight_end":12}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/LoggerLib.rs","byte_start":629,"byte_end":641,"line_start":29,"line_end":29,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn set_log_mask(&self, mask: u32) {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/LoggerLib.rs","byte_start":1131,"byte_end":1140,"line_start":43,"line_end":43,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn log_debug(&self, message: &str) {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `set_log_mask` and `log_debug` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/LoggerLib.rs:29:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Logger {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_log_mask(&self, mask: u32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn log_debug(&self, message: &str) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"crate `BrewController` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case: `brew_controller`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: crate `BrewController` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: convert the identifier to snake case: `brew_controller`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"module `BrewDBLib` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":714,"byte_end":723,"line_start":26,"line_end":26,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"mod BrewDBLib;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":714,"byte_end":723,"line_start":26,"line_end":26,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"mod BrewDBLib;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"brew_dblib","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `BrewDBLib` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod BrewDBLib;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `brew_dblib`\u001b[0m\n\n"}
{"message":"module `SimpleKalmanFilterLib` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":758,"byte_end":779,"line_start":29,"line_end":29,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"mod SimpleKalmanFilterLib;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":758,"byte_end":779,"line_start":29,"line_end":29,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"mod SimpleKalmanFilterLib;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":"simple_kalman_filter_lib","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `SimpleKalmanFilterLib` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod SimpleKalmanFilterLib;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `simple_kalman_filter_lib`\u001b[0m\n\n"}
{"message":"module `BrewControllerLib` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":832,"byte_end":849,"line_start":31,"line_end":31,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"mod BrewControllerLib;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":832,"byte_end":849,"line_start":31,"line_end":31,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"mod BrewControllerLib;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"brew_controller_lib","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `BrewControllerLib` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod BrewControllerLib;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `brew_controller_lib`\u001b[0m\n\n"}
{"message":"module `LoggerLib` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":894,"byte_end":903,"line_start":33,"line_end":33,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"mod LoggerLib;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":894,"byte_end":903,"line_start":33,"line_end":33,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"mod LoggerLib;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"logger_lib","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `LoggerLib` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod LoggerLib;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `logger_lib`\u001b[0m\n\n"}
{"message":"module `GenericDrivers` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":228,"byte_end":242,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"mod GenericDrivers {","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":228,"byte_end":242,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"mod GenericDrivers {","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"generic_drivers","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `GenericDrivers` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod GenericDrivers {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `generic_drivers`\u001b[0m\n\n"}
{"message":"structure field `_myBrewDB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":755,"byte_end":764,"line_start":22,"line_end":22,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _myBrewDB: Option<BrewDBClass>,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":755,"byte_end":764,"line_start":22,"line_end":22,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _myBrewDB: Option<BrewDBClass>,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"_my_brew_db","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_myBrewDB` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _myBrewDB: Option<BrewDBClass>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_my_brew_db`\u001b[0m\n\n"}
{"message":"structure field `_mySensorState` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":791,"byte_end":805,"line_start":23,"line_end":23,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    _mySensorState:Option<SensorState>,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":791,"byte_end":805,"line_start":23,"line_end":23,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    _mySensorState:Option<SensorState>,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"_my_sensor_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_mySensorState` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _mySensorState:Option<SensorState>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_my_sensor_state`\u001b[0m\n\n"}
{"message":"structure field `_zCPin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":831,"byte_end":837,"line_start":24,"line_end":24,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    _zCPin: u32,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":831,"byte_end":837,"line_start":24,"line_end":24,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    _zCPin: u32,","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"_z_cpin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_zCPin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _zCPin: u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_z_cpin`\u001b[0m\n\n"}
{"message":"structure field `_brewPin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":848,"byte_end":856,"line_start":25,"line_end":25,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    _brewPin: u32, ","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":848,"byte_end":856,"line_start":25,"line_end":25,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    _brewPin: u32, ","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"_brew_pin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_brewPin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:25:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _brewPin: u32, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_brew_pin`\u001b[0m\n\n"}
{"message":"structure field `_boilerRelayPin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":868,"byte_end":883,"line_start":26,"line_end":26,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    _boilerRelayPin:u32,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":868,"byte_end":883,"line_start":26,"line_end":26,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    _boilerRelayPin:u32,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"_boiler_relay_pin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_boilerRelayPin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _boilerRelayPin:u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_boiler_relay_pin`\u001b[0m\n\n"}
{"message":"structure field `_dimmerPin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":893,"byte_end":903,"line_start":27,"line_end":27,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    _dimmerPin:u32,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":893,"byte_end":903,"line_start":27,"line_end":27,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    _dimmerPin:u32,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"_dimmer_pin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_dimmerPin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:27:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _dimmerPin:u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_dimmer_pin`\u001b[0m\n\n"}
{"message":"structure field `_steamPin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":913,"byte_end":922,"line_start":28,"line_end":28,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _steamPin:u32,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":913,"byte_end":922,"line_start":28,"line_end":28,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _steamPin:u32,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"_steam_pin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_steamPin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:28:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _steamPin:u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_steam_pin`\u001b[0m\n\n"}
{"message":"structure field `_valvePin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":932,"byte_end":941,"line_start":29,"line_end":29,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _valvePin:u32,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":932,"byte_end":941,"line_start":29,"line_end":29,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _valvePin:u32,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"_valve_pin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_valvePin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:29:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _valvePin:u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_valve_pin`\u001b[0m\n\n"}
{"message":"structure field `_waterPin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":951,"byte_end":960,"line_start":30,"line_end":30,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _waterPin:u32,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":951,"byte_end":960,"line_start":30,"line_end":30,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    _waterPin:u32,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"_water_pin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_waterPin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _waterPin:u32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_water_pin`\u001b[0m\n\n"}
{"message":"structure field `boilerState` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":1811,"byte_end":1822,"line_start":62,"line_end":62,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub boilerState:bool","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":1811,"byte_end":1822,"line_start":62,"line_end":62,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub boilerState:bool","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"boiler_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `boilerState` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:62:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub boilerState:bool\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `boiler_state`\u001b[0m\n\n"}
{"message":"method `SetBoilerState` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":3842,"byte_end":3856,"line_start":134,"line_end":134,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn SetBoilerState(&mut self, state: bool) {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":3842,"byte_end":3856,"line_start":134,"line_end":134,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn SetBoilerState(&mut self, state: bool) {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":"set_boiler_state","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `SetBoilerState` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:134:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SetBoilerState(&mut self, state: bool) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `set_boiler_state`\u001b[0m\n\n"}
{"message":"method `Initialize` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":4344,"byte_end":4354,"line_start":150,"line_end":150,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn Initialize(&mut self)","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":4344,"byte_end":4354,"line_start":150,"line_end":150,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn Initialize(&mut self)","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"initialize","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `Initialize` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:150:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn Initialize(&mut self)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `initialize`\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":4955,"byte_end":5019,"line_start":161,"line_end":161,"column_start":9,"column_end":73,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._boilerRelayPin, rust_pigpio::OUTPUT);","highlight_start":9,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_must_use)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":4955,"byte_end":4955,"line_start":161,"line_end":161,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._boilerRelayPin, rust_pigpio::OUTPUT);","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:161:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rust_pigpio::set_mode(self._boilerRelayPin, rust_pigpio::OUTPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_must_use)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mrust_pigpio::set_mode(self._boilerRelayPin, rust_pigpio::OUTPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5038,"byte_end":5096,"line_start":163,"line_end":163,"column_start":9,"column_end":67,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._valvePin, rust_pigpio::OUTPUT);","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5038,"byte_end":5038,"line_start":163,"line_end":163,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._valvePin, rust_pigpio::OUTPUT);","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:163:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rust_pigpio::set_mode(self._valvePin, rust_pigpio::OUTPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mrust_pigpio::set_mode(self._valvePin, rust_pigpio::OUTPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5115,"byte_end":5172,"line_start":165,"line_end":165,"column_start":9,"column_end":66,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._waterPin, rust_pigpio::INPUT);        ","highlight_start":9,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5115,"byte_end":5115,"line_start":165,"line_end":165,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._waterPin, rust_pigpio::INPUT);        ","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:165:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rust_pigpio::set_mode(self._waterPin, rust_pigpio::INPUT);        \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mrust_pigpio::set_mode(self._waterPin, rust_pigpio::INPUT);        \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5190,"byte_end":5246,"line_start":166,"line_end":166,"column_start":9,"column_end":65,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._brewPin, rust_pigpio::INPUT);","highlight_start":9,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5190,"byte_end":5190,"line_start":166,"line_end":166,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._brewPin, rust_pigpio::INPUT);","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:166:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rust_pigpio::set_mode(self._brewPin, rust_pigpio::INPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mrust_pigpio::set_mode(self._brewPin, rust_pigpio::INPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5256,"byte_end":5313,"line_start":167,"line_end":167,"column_start":9,"column_end":66,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._steamPin, rust_pigpio::INPUT);","highlight_start":9,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5256,"byte_end":5256,"line_start":167,"line_end":167,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._steamPin, rust_pigpio::INPUT);","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:167:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rust_pigpio::set_mode(self._steamPin, rust_pigpio::INPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mrust_pigpio::set_mode(self._steamPin, rust_pigpio::INPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5341,"byte_end":5400,"line_start":170,"line_end":170,"column_start":9,"column_end":68,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._dimmerPin, rust_pigpio::OUTPUT);        ","highlight_start":9,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5341,"byte_end":5341,"line_start":170,"line_end":170,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._dimmerPin, rust_pigpio::OUTPUT);        ","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:170:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   rust_pigpio::set_mode(self._dimmerPin, rust_pigpio::OUTPUT);        \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mrust_pigpio::set_mode(self._dimmerPin, rust_pigpio::OUTPUT);        \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"unused `Result` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5418,"byte_end":5472,"line_start":171,"line_end":171,"column_start":9,"column_end":63,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._zCPin, rust_pigpio::INPUT);","highlight_start":9,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this `Result` may be an `Err` variant, which should be handled","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5418,"byte_end":5418,"line_start":171,"line_end":171,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        rust_pigpio::set_mode(self._zCPin, rust_pigpio::INPUT);","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `Result` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:171:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rust_pigpio::set_mode(self._zCPin, rust_pigpio::INPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this `Result` may be an `Err` variant, which should be handled\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mrust_pigpio::set_mode(self._zCPin, rust_pigpio::INPUT);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"message":"variable `psmHandle` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5712,"byte_end":5721,"line_start":179,"line_end":179,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"        let mut psmHandle:GenericDrivers::PSMHandle=std::ptr::null_mut();","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/BrewControllerLib.rs","byte_start":5712,"byte_end":5721,"line_start":179,"line_end":179,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"        let mut psmHandle:GenericDrivers::PSMHandle=std::ptr::null_mut();","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"psm_handle","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `psmHandle` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/BrewControllerLib.rs:179:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut psmHandle:GenericDrivers::PSMHandle=std::ptr::null_mut();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `psm_handle`\u001b[0m\n\n"}
{"message":"linking with `cc` failed: exit status: 1","code":null,"level":"error","spans":[],"children":[{"message":"LC_ALL=\"C\" PATH=\"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/bin:/home/pi/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games\" VSLANG=\"1033\" \"cc\" \"/tmp/rustc2B23fF/symbols.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.10y2a7bm7h30dubc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.13id6vy808c935rf.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.13rvya5kz5afqgbv.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.13y4uptsx6e94nya.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.14paltc9qec4f3x8.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.15icsjxiriveu24l.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.18goiimc85w9zg4i.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1cg1f2no7vnn7xu3.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1h4adc8klxtj04f9.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1skc8plbezkvteoe.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1v0zvatraz82ve6y.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.29qj2d5fdrskbxub.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2akt7wjt3h6w326x.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2b41lgsatoi4jaoc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2cpt14hcepze3hm6.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2ghbuygs35hhekh0.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2hkuqucln5hfulnn.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2pd4vz009e455cfg.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2pq4d7bzr12ngdbk.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2t5uzhl2zhd8lwtt.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2vhnxc9et3vgm1ub.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.38qj4ny92tlkrkys.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.3do1dmfik6phor9e.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.3g4xkchunz3a2abc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.3s5fk5s6iwk78cu3.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.47puf52gzhr28m83.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4cjieyouhzm5a0z0.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4ewb5jduo6e8fv7g.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4pwih3verkgfrczc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4wj90yheg1sbszx2.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.5egnfj8bjsd8zdnx.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.5fk127w9wrdg1uj0.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.64yvgjykm0ax4gs.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.hyzyl8j0qc6c0as.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.iaqbzr38ba2prlr.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.mfsyrvi238tllly.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.r5kd77pn3ueu3tu.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.x8z0kfoez1dqwtw.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.z5mswdye2f0el37.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.z9ec9uk7r9gso9w.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2jk639wxe3av048w.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps\" \"-L\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/liblazy_static-a1c7da82b1419d90.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libfunction_name-37ba4f7282d86c17.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librust_pigpio-47f1a159d8b6ff82.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librusqlite-edf4bf9411f006ba.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libbitflags-d82ff20515811ed1.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libsmallvec-9e2c35bf24d8f66c.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libfallible_streaming_iterator-20b7e7185522c10e.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libfallible_iterator-6697a76c9b0ff9c8.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libhashlink-9ea967f097b1b019.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libhashbrown-29ec43d11177736f.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libahash-8883f7cde389a86d.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libonce_cell-232864a9ec9f8a01.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/liblibsqlite3_sys-c36adfc5613fb869.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librand-67cf9cfbe01c26c0.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librand_chacha-81d62b1137404ce7.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libppv_lite86-0539e3869c6db8cb.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librand_core-d6b4d6e48146cfe5.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libgetrandom-94faf5994e742bc7.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/liblibc-c52c69fc5d2010b4.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libcfg_if-6caf6cd55fa899f6.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libchrono-a04437a7b8b43806.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libnum_traits-5e7f9f32ed4775ec.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libiana_time_zone-1024f113f739cc78.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libstd-1af56df70101340f.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libpanic_unwind-2d201e9ec773e2b2.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libobject-11edaa83ea3f42ca.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libmemchr-be5d62f450379333.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libaddr2line-48892539e9a2c4de.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libgimli-f8eb1df1397eacbf.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/librustc_demangle-2e09868052a8b2d5.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libstd_detect-a7e259ed513c618c.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libhashbrown-791329d15b754d4d.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-00676b12b0ca4248.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libminiz_oxide-77a22a58722b5fb2.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libadler-e9ab6f5f15790e88.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libunwind-fab82cfa2048cd45.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libcfg_if-21f6d61e1c83d48b.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/liblibc-bac7f74953c2c715.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/liballoc-9b674ebb751cb2fa.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/librustc_std_workspace_core-088fae249a1081ae.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libcore-29f211c7751ad68b.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libcompiler_builtins-26783adfa77949da.rlib\" \"-Wl,-Bdynamic\" \"-lpigpio\" \"-lsqlite3\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-Wl,--eh-frame-hdr\" \"-Wl,-z,noexecstack\" \"-L\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib\" \"-o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\"","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"/usr/bin/ld: /home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4wj90yheg1sbszx2.rcgu.o: in function `BrewController::BrewControllerLib::BrewController::Initialize':\n/home/pi/workspace/gaggiuino/BrewController/src/BrewControllerLib.rs:181: undefined reference to `PSM_Create'\ncollect2: error: ld returned 1 exit status\n","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"some `extern` functions couldn't be found; some native libraries may need to be installed or have their path specified","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use the `-l` flag to specify native libraries to link","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use the `cargo:rustc-link-lib` directive to specify the native libraries to link with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#cargorustc-link-libkindname)","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: linking with `cc` failed: exit status: 1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: LC_ALL=\"C\" PATH=\"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/bin:/home/pi/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games\" VSLANG=\"1033\" \"cc\" \"/tmp/rustc2B23fF/symbols.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.10y2a7bm7h30dubc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.13id6vy808c935rf.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.13rvya5kz5afqgbv.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.13y4uptsx6e94nya.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.14paltc9qec4f3x8.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.15icsjxiriveu24l.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.18goiimc85w9zg4i.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1cg1f2no7vnn7xu3.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1h4adc8klxtj04f9.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1skc8plbezkvteoe.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.1v0zvatraz82ve6y.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.29qj2d5fdrskbxub.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2akt7wjt3h6w326x.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2b41lgsatoi4jaoc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2cpt14hcepze3hm6.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2ghbuygs35hhekh0.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2hkuqucln5hfulnn.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2pd4vz009e455cfg.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2pq4d7bzr12ngdbk.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2t5uzhl2zhd8lwtt.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2vhnxc9et3vgm1ub.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.38qj4ny92tlkrkys.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.3do1dmfik6phor9e.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.3g4xkchunz3a2abc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.3s5fk5s6iwk78cu3.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.47puf52gzhr28m83.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4cjieyouhzm5a0z0.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4ewb5jduo6e8fv7g.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4pwih3verkgfrczc.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4wj90yheg1sbszx2.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.5egnfj8bjsd8zdnx.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.5fk127w9wrdg1uj0.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.64yvgjykm0ax4gs.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.hyzyl8j0qc6c0as.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.iaqbzr38ba2prlr.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.mfsyrvi238tllly.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.r5kd77pn3ueu3tu.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.x8z0kfoez1dqwtw.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.z5mswdye2f0el37.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.z9ec9uk7r9gso9w.rcgu.o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.2jk639wxe3av048w.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps\" \"-L\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/liblazy_static-a1c7da82b1419d90.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libfunction_name-37ba4f7282d86c17.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librust_pigpio-47f1a159d8b6ff82.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librusqlite-edf4bf9411f006ba.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libbitflags-d82ff20515811ed1.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libsmallvec-9e2c35bf24d8f66c.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libfallible_streaming_iterator-20b7e7185522c10e.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libfallible_iterator-6697a76c9b0ff9c8.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libhashlink-9ea967f097b1b019.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libhashbrown-29ec43d11177736f.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libahash-8883f7cde389a86d.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libonce_cell-232864a9ec9f8a01.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/liblibsqlite3_sys-c36adfc5613fb869.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librand-67cf9cfbe01c26c0.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librand_chacha-81d62b1137404ce7.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libppv_lite86-0539e3869c6db8cb.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/librand_core-d6b4d6e48146cfe5.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libgetrandom-94faf5994e742bc7.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/liblibc-c52c69fc5d2010b4.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libcfg_if-6caf6cd55fa899f6.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libchrono-a04437a7b8b43806.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libnum_traits-5e7f9f32ed4775ec.rlib\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/libiana_time_zone-1024f113f739cc78.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libstd-1af56df70101340f.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libpanic_unwind-2d201e9ec773e2b2.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libobject-11edaa83ea3f42ca.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libmemchr-be5d62f450379333.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libaddr2line-48892539e9a2c4de.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libgimli-f8eb1df1397eacbf.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/librustc_demangle-2e09868052a8b2d5.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libstd_detect-a7e259ed513c618c.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libhashbrown-791329d15b754d4d.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/librustc_std_workspace_alloc-00676b12b0ca4248.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libminiz_oxide-77a22a58722b5fb2.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libadler-e9ab6f5f15790e88.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libunwind-fab82cfa2048cd45.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libcfg_if-21f6d61e1c83d48b.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/liblibc-bac7f74953c2c715.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/liballoc-9b674ebb751cb2fa.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/librustc_std_workspace_core-088fae249a1081ae.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libcore-29f211c7751ad68b.rlib\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib/libcompiler_builtins-26783adfa77949da.rlib\" \"-Wl,-Bdynamic\" \"-lpigpio\" \"-lsqlite3\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-Wl,--eh-frame-hdr\" \"-Wl,-z,noexecstack\" \"-L\" \"/home/pi/.rustup/toolchains/stable-aarch64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-linux-gnu/lib\" \"-o\" \"/home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: /usr/bin/ld: /home/pi/workspace/gaggiuino/BrewController/target/debug/deps/BrewController-cc9f56a19f90df19.4wj90yheg1sbszx2.rcgu.o: in function `BrewController::BrewControllerLib::BrewController::Initialize':\u001b[0m\n\u001b[0m          /home/pi/workspace/gaggiuino/BrewController/src/BrewControllerLib.rs:181: undefined reference to `PSM_Create'\u001b[0m\n\u001b[0m          collect2: error: ld returned 1 exit status\u001b[0m\n\u001b[0m          \u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: some `extern` functions couldn't be found; some native libraries may need to be installed or have their path specified\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: use the `-l` flag to specify native libraries to link\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: use the `cargo:rustc-link-lib` directive to specify the native libraries to link with Cargo (see https://doc.rust-lang.org/cargo/reference/build-scripts.html#cargorustc-link-libkindname)\u001b[0m\n\n"}
{"message":"aborting due to previous error; 68 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error; 68 warnings emitted\u001b[0m\n\n"}
